import psycopg2
import time

def create_chat_database():
    """–°–æ–∑–¥–∞–µ–º –±–∞–∑—É –∏ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —á–∞—Ç–∞"""
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ë–î postgres
        conn = psycopg2.connect(
            host="localhost",
            database="postgres",
            user="postgres",
            password="123456",  # —Ç–≤–æ–π –ø–∞—Ä–æ–ª—å!
            port="5432"
        )
        conn.autocommit = True
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–ª—è —á–∞—Ç–∞ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        cursor.execute("CREATE DATABASE IF NOT EXISTS chat_app")
        print("‚úÖ –ë–∞–∑–∞ chat_app —Å–æ–∑–¥–∞–Ω–∞/—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        cursor.close()
        conn.close()
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –ë–î –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∞—Å—å
        print("‚è≥ –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã...")
        time.sleep(2)
        
        # –¢–µ–ø–µ—Ä—å –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –Ω–∞—à–µ–π –Ω–æ–≤–æ–π –±–∞–∑–µ
        conn = psycopg2.connect(
            host="localhost",
            database="chat_app",  # –Ω–∞—à–∞ –±–∞–∑–∞!
            user="postgres",
            password="qwerty",    # —Ç–≤–æ–π –ø–∞—Ä–æ–ª—å!
            port="5432"
        )
        cursor = conn.cursor()
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ chat_app!")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        tables_sql = [
            # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            """
            CREATE TABLE IF NOT EXISTS users (
                id SERIAL PRIMARY KEY,
                username VARCHAR(50) UNIQUE NOT NULL,
                created_at TIMESTAMP DEFAULT NOW()
            )
            """,
            # –¢–∞–±–ª–∏—Ü–∞ —á–∞—Ç–æ–≤
            """
            CREATE TABLE IF NOT EXISTS chats (
                id SERIAL PRIMARY KEY,
                name VARCHAR(100) NOT NULL,
                created_at TIMESTAMP DEFAULT NOW()
            )
            """,
            # –¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            """
            CREATE TABLE IF NOT EXISTS messages (
                id SERIAL PRIMARY KEY,
                chat_id INTEGER NOT NULL,
                user_id INTEGER NOT NULL,
                message_text TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT NOW(),
                page_number INTEGER DEFAULT 1
            )
            """
        ]
        
        for i, table_sql in enumerate(tables_sql):
            cursor.execute(table_sql)
            table_names = ["users", "chats", "messages"]
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table_names[i]} —Å–æ–∑–¥–∞–Ω–∞")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
        cursor.execute("""
            INSERT INTO users (username) VALUES 
            ('user1'), ('user2'), ('user3')
            ON CONFLICT (username) DO NOTHING
        """)
        
        cursor.execute("""
            INSERT INTO chats (name) VALUES 
            ('–û–±—â–∏–π —á–∞—Ç')
            ON CONFLICT DO NOTHING
        """)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        cursor.execute("SELECT COUNT(*) FROM messages")
        message_count = cursor.fetchone()[0]
        
        if message_count == 0:
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            for i in range(1, 151):
                user_id = (i % 3) + 1  # —á–µ—Ä–µ–¥—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                page_number = ((i - 1) // 100) + 1  # –≤—ã—á–∏—Å–ª—è–µ–º –ø–∞—á–∫—É
                
                cursor.execute("""
                    INSERT INTO messages (chat_id, user_id, message_text, page_number)
                    VALUES (%s, %s, %s, %s)
                """, (1, user_id, f"–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {i}", page_number))
            
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 150 —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
        else:
            print(f"‚úÖ –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {message_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        conn.commit()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã:")
        cursor.execute("SELECT COUNT(*) FROM users")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {cursor.fetchone()[0]}")
        
        cursor.execute("SELECT COUNT(*) FROM chats")
        print(f"   –ß–∞—Ç–æ–≤: {cursor.fetchone()[0]}")
        
        cursor.execute("SELECT COUNT(*) FROM messages")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–π: {cursor.fetchone()[0]}")
        
        print("\nüì¶ –ü–∞—á–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:")
        cursor.execute("""
            SELECT page_number, COUNT(*) 
            FROM messages 
            GROUP BY page_number 
            ORDER BY page_number
        """)
        for page_num, count in cursor.fetchall():
            print(f"   –ü–∞—á–∫–∞ {page_num}: {count} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        cursor.close()
        conn.close()
        
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å –ø–∞—Ä–æ–ª—å PostgreSQL")
        print("2. –£–±–µ–¥–∏—Å—å —á—Ç–æ —Å–ª—É–∂–±–∞ PostgreSQL –∑–∞–ø—É—â–µ–Ω–∞")
        print("3. –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å PostgreSQL")

if __name__ == "__main__":
    create_chat_database()